{"ast":null,"code":"var _jsxFileName = \"/home/harry/project_thea/src/components/sensor.js\";\nimport React, { PureComponent } from \"react\";\nimport { Marker } from \"react-map-gl\";\nimport { sensor_data, detection_data } from \"../fake_data/sensor_data\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { DeleteSensorButton, EditSensorLocationButton } from \"./buttons\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditLocationIcon from '@material-ui/icons/EditLocation';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MediaCard from \"./mediaCard\";\nimport ChartCard from \"./chartCard\"; // Some global settings.\n\nconst ICON_SIZE = 80;\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\nconst pinStyle = {\n  fill: '#d00',\n  stroke: 'none'\n};\n\nclass Pin extends PureComponent {\n  render() {\n    const _this$props$size = this.props.size,\n          size = _this$props$size === void 0 ? 20 : _this$props$size;\n    return React.createElement(\"svg\", {\n      height: size,\n      viewBox: \"0 0 24 24\",\n      style: pinStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: ICON,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass SensorIcon extends React.Component {\n  get_pin(sensor, onClick) {\n    if (this.props.sensor.drag === true) {\n      return React.createElement(Pin, {\n        size: 50,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: () => onClick(sensor),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: sensor.icon,\n        alt: \"sensor_icon\",\n        style: {\n          width: `${ICON_SIZE}px`,\n          transform: `translate(${-ICON_SIZE / 2}px,${-ICON_SIZE}px)`\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          sensor = _this$props.sensor,\n          index = _this$props.index,\n          onClick = _this$props.onClick,\n          onMarkerDragEnd = _this$props.onMarkerDragEnd;\n    return React.createElement(Marker, {\n      key: `marker-${index}`,\n      draggable: true,\n      onDragEnd: onMarkerDragEnd,\n      longitude: sensor.longitude,\n      latitude: sensor.latitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.get_pin(sensor, onClick));\n  }\n\n}\n\nclass InfoCard extends React.Component {\n  render() {\n    // Deconstruct props.\n    const sensor_name = this.props.sensor_name; // Find the sensor with the right name.\n\n    const sensor = sensor_data.filter(sensor => sensor.name === sensor_name)[0];\n    return React.createElement(\"div\", {\n      style: {\n        padding: \"20px\",\n        paddingTop: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: \"20px\",\n        backgroundColor: \"#E4F3D8\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Basic Sensor Details\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Name:\"), \" \", sensor.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Sensor Type:\"), \" \", sensor.type), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Created:\"), \" \", sensor.created), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Data Update Frequency:\"), \" \", sensor.frequency), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Sensor Security:\"), \" \", sensor.access), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Data Provenance:\"), \" \", sensor.provenance)));\n  }\n\n}\n\nclass TitleCard extends React.Component {\n  render() {\n    // Deconstruct props.\n    const _this$props2 = this.props,\n          sensor_name = _this$props2.sensor_name,\n          remove_tab_cb = _this$props2.remove_tab_cb,\n          tab_id = _this$props2.tab_id; // Find the sensor with the right name.\n\n    const sensor = sensor_data.filter(sensor => sensor.name === sensor_name)[0];\n    return React.createElement(\"div\", {\n      style: {\n        padding: \"20px\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: () => remove_tab_cb(tab_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), React.createElement(\"h3\", {\n      style: {\n        marginTop: \"6px\",\n        marginLeft: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, sensor.name));\n  }\n\n}\n\nclass DataCard extends React.Component {\n  render() {\n    // Deconstruct props.\n    const sensor_name = this.props.sensor_name; // Find the sensor with the right name.\n\n    const sensor = sensor_data.filter(sensor => sensor.name === sensor_name)[0]; // Get detction data.\n\n    const data = detection_data.filter(data => data.sensor_id === sensor.id); // Compute the card content based on the detection data.\n\n    let card_content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"No data available yet.\");\n\n    if (data.length > 0) {\n      if (data[0].type === 'image') {\n        card_content = React.createElement(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, data.map(d => React.createElement(\"div\", {\n          style: {\n            padding: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(MediaCard, {\n          image: d.image,\n          title: d.title,\n          time_seen: d.time_seen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }))));\n      } else {\n        card_content = React.createElement(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, data.map(d => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(ChartCard, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }))));\n      }\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        padding: \"20px\",\n        paddingTop: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: \"20px\",\n        backgroundColor: \"#CAE6B2\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Data\")), card_content));\n  }\n\n}\n\nclass ControlCard extends React.Component {\n  render() {\n    // Deconstruct props.\n    const _this$props3 = this.props,\n          sensor_name = _this$props3.sensor_name,\n          callbackRemoveSensor = _this$props3.callbackRemoveSensor,\n          callbackRelocateSensor = _this$props3.callbackRelocateSensor,\n          tab_id = _this$props3.tab_id; // Find the sensor with the right name.\n\n    const sensor = sensor_data.filter(sensor => sensor.name === sensor_name)[0];\n    return React.createElement(\"div\", {\n      style: {\n        padding: \"20px\",\n        paddingTop: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: \"20px\",\n        backgroundColor: \"#AFD88D\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Control\")), React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(DeleteSensorButton, {\n      sensorID: sensor.id,\n      callbackRemoveSensor: callbackRemoveSensor,\n      tab_id: tab_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass SensorBite extends React.Component {\n  render() {\n    // Deconstruct props.\n    const _this$props4 = this.props,\n          info = _this$props4.info,\n          add_tab_cb = _this$props4.add_tab_cb;\n    return React.createElement(\"div\", {\n      style: {\n        paddingTop: \"15px\",\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, `${info.name}`)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, `Type: ${info.type}`), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Health: \", React.createElement(\"b\", {\n      style: {\n        color: '#55BB55'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, info.health)), React.createElement(\"div\", {\n      onClick: () => add_tab_cb(info.name),\n      style: {\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"More Details\"))));\n  }\n\n}\n\nclass SensorSummaryCard extends React.Component {\n  render() {\n    // Deconstruct props.\n    const sensor_name = this.props.sensor_name; // Find the sensor with the right name.\n\n    const sensor = sensor_data.filter(sensor => sensor.name === sensor_name)[0];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, sensor.name));\n  }\n\n}\n\nexport { SensorBite, SensorIcon, InfoCard, TitleCard, DataCard, ControlCard, SensorSummaryCard };","map":{"version":3,"sources":["/home/harry/project_thea/src/components/sensor.js"],"names":["React","PureComponent","Marker","sensor_data","detection_data","Tooltip","DeleteSensorButton","EditSensorLocationButton","CloseIcon","DeleteIcon","EditLocationIcon","IconButton","MediaCard","ChartCard","ICON_SIZE","ICON","pinStyle","fill","stroke","Pin","render","props","size","SensorIcon","Component","get_pin","sensor","onClick","drag","cursor","icon","width","transform","index","onMarkerDragEnd","longitude","latitude","InfoCard","sensor_name","filter","name","padding","paddingTop","backgroundColor","display","flexDirection","alignItems","type","created","frequency","access","provenance","TitleCard","remove_tab_cb","tab_id","marginTop","marginLeft","DataCard","data","sensor_id","id","card_content","length","map","d","image","title","time_seen","ControlCard","callbackRemoveSensor","callbackRelocateSensor","SensorBite","info","add_tab_cb","textAlign","color","health","SensorSummaryCard"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport {Marker} from \"react-map-gl\";\nimport { sensor_data, detection_data } from \"../fake_data/sensor_data\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { DeleteSensorButton, EditSensorLocationButton } from \"./buttons\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditLocationIcon from '@material-ui/icons/EditLocation';\n\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MediaCard from \"./mediaCard\";\nimport ChartCard from \"./chartCard\";\n\n// Some global settings.\nconst ICON_SIZE = 80;\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst pinStyle = {\n  fill: '#d00',\n  stroke: 'none'\n};\n\nclass Pin extends PureComponent {\n  render() {\n    const {size = 20} = this.props;\n\n    return (\n      <svg height={size} viewBox=\"0 0 24 24\" style={pinStyle}>\n        <path d={ICON} />\n      </svg>\n    );\n  }\n}\n\nclass SensorIcon extends React.Component {\n\n    get_pin (sensor, onClick) {\n        if (this.props.sensor.drag === true) {\n            return (\n                <Pin size={50} />\n            )\n        }\n        else {\n            return (\n                <div style={{cursor: 'pointer'}} onClick={() => onClick(sensor)}>\n                    <img src={sensor.icon} alt=\"sensor_icon\"\n                         style={{\n                             width: `${ICON_SIZE}px`,\n                             transform: `translate(${-ICON_SIZE / 2}px,${-ICON_SIZE}px)`}}\n                    />\n                </div>\n            )\n        }\n    }\n\n    render() {\n\n        const {sensor, index, onClick, onMarkerDragEnd} = this.props;\n\n        return (\n            <Marker\n                key={`marker-${index}`}\n                draggable\n                onDragEnd={onMarkerDragEnd}\n                longitude={sensor.longitude}\n                latitude={sensor.latitude}>\n                {this.get_pin(sensor, onClick)}\n            </Marker>\n        );\n    }\n}\n\nclass InfoCard extends React.Component {\n\n    render() {\n        // Deconstruct props.\n        const { sensor_name } = this.props;\n\n        // Find the sensor with the right name.\n        const sensor = sensor_data.filter(sensor => sensor.name === sensor_name)[0];\n\n        return (\n            <div style={{padding: \"20px\", paddingTop: \"0px\"}}>\n                <div style={{padding: \"20px\", backgroundColor:\"#E4F3D8\", display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\"}}>\n                    <div><h4>Basic Sensor Details</h4></div>\n                    <div><b>Name:</b> {sensor.name}</div>\n                    <div><b>Sensor Type:</b> {sensor.type}</div>\n                    <div><b>Created:</b> {sensor.created}</div>\n                    <div><b>Data Update Frequency:</b> {sensor.frequency}</div>\n                    <div><b>Sensor Security:</b> {sensor.access}</div>\n                    <div><b>Data Provenance:</b> {sensor.provenance}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass TitleCard extends React.Component {\n\n    render() {\n        // Deconstruct props.\n        const { sensor_name, remove_tab_cb, tab_id } = this.props;\n\n        // Find the sensor with the right name.\n        const sensor = sensor_data.filter(sensor => sensor.name === sensor_name)[0];\n\n        return (\n            <div style={{padding: \"20px\", display: \"flex\"}}>\n                <Tooltip title=\"Close\">\n                    <IconButton onClick={() => remove_tab_cb(tab_id)}>\n                        <CloseIcon></CloseIcon>\n                    </IconButton>\n                </Tooltip>\n                <h3 style={{marginTop:\"6px\", marginLeft:\"10px\"}}>{sensor.name}</h3>\n            </div>\n        );\n    }\n}\n\nclass DataCard extends React.Component {\n\n    render() {\n        // Deconstruct props.\n        const { sensor_name } = this.props;\n\n        // Find the sensor with the right name.\n        const sensor = sensor_data.filter(sensor => sensor.name === sensor_name)[0];\n\n        // Get detction data.\n        const data = detection_data.filter(data => data.sensor_id === sensor.id);\n\n        // Compute the card content based on the detection data.\n        let card_content = <div>No data available yet.</div>;\n        if (data.length > 0) {\n            if (data[0].type === 'image') {\n                card_content = <div style={{display: 'flex'}}>\n                {data.map((d) =>\n                    <div style={{padding: '10px'}}>\n                        <MediaCard\n                            image={d.image}\n                            title={d.title}\n                            time_seen={d.time_seen}\n                        />\n                    </div>\n                )}\n                </div>\n            }\n            else {\n                card_content = <div style={{display: 'flex'}}>\n                {data.map((d) =>\n                    <div>\n                        <ChartCard/>\n                    </div>\n                )}\n                </div>\n            }\n        }\n\n        return (\n            <div style={{padding: \"20px\", paddingTop: \"0px\"}}>\n                <div style={{padding: \"20px\", backgroundColor:\"#CAE6B2\", display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\"}}>\n                    <div><h4>Data</h4></div>\n                    {card_content}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass ControlCard extends React.Component {\n\n    render() {\n        // Deconstruct props.\n        const { sensor_name, callbackRemoveSensor, callbackRelocateSensor, tab_id } = this.props;\n\n        // Find the sensor with the right name.\n        const sensor = sensor_data.filter(sensor => sensor.name === sensor_name)[0];\n\n        return (\n            <div style={{padding: \"20px\", paddingTop: \"0px\"}}>\n                <div style={{padding: \"20px\", backgroundColor:\"#AFD88D\", display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\"}}>\n                    <div><h4>Control</h4></div>\n                    <div style={{display: 'flex'}}>\n                        <DeleteSensorButton\n                            sensorID={sensor.id}\n                            callbackRemoveSensor={callbackRemoveSensor}\n                            tab_id={tab_id}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass SensorBite extends React.Component {\n  render() {\n\n      // Deconstruct props.\n      const {info, add_tab_cb} = this.props;\n\n      return (\n          <div style={{paddingTop: \"15px\", textAlign: \"left\"}}>\n              <div><b>{`${info.name}`}</b></div>\n              <div>\n                  <div>{`Type: ${info.type}`}</div>\n                  <div>Health: <b style={{color: '#55BB55'}}>{info.health}</b></div>\n                  <div onClick={() => add_tab_cb(info.name)} style={{cursor: 'pointer'}}><u>More Details</u></div>\n              </div>\n          </div>\n      );\n  }\n}\n\nclass SensorSummaryCard extends React.Component {\n    render() {\n\n        // Deconstruct props.\n        const { sensor_name } = this.props;\n\n        // Find the sensor with the right name.\n        const sensor = sensor_data.filter(sensor => sensor.name === sensor_name)[0];\n\n        return (\n            <div><p>{sensor.name}</p></div>\n        )\n    }\n}\n\nexport { SensorBite, SensorIcon, InfoCard, TitleCard, DataCard, ControlCard, SensorSummaryCard };"]},"metadata":{},"sourceType":"module"}