{"ast":null,"code":"var _jsxFileName = \"/home/harry/pu_frontend/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\nconst SIZE = 20;\nconst CITIES = [{\n  \"city\": \"New York\",\n  \"population\": \"8,175,133\",\n  \"image\": \"http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Above_Gotham.jpg/240px-Above_Gotham.jpg\",\n  \"state\": \"New York\",\n  \"latitude\": 51.5084,\n  \"longitude\": -2.5927\n}];\n\nclass Pins extends React.Component {\n  render() {\n    const _this$props = this.props,\n          data = _this$props.data,\n          onClick = _this$props.onClick;\n    return data.map((city, index) => React.createElement(Marker, {\n      key: `marker-${index}`,\n      longitude: city.longitude,\n      latitude: city.latitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      height: SIZE,\n      viewBox: \"0 0 24 24\",\n      style: {\n        cursor: 'pointer',\n        fill: '#d00',\n        stroke: 'none',\n        transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\n      },\n      onClick: () => onClick(city),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: ICON,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewport: {\n        width: \"100%\",\n        height: 1000,\n        latitude: 51.5084,\n        longitude: -2.5927,\n        zoom: 16\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(ReactMapGL, Object.assign({}, this.state.viewport, {\n      onViewportChange: viewport => this.setState({\n        viewport\n      }),\n      mapStyle: \"mapbox://styles/mapbox/outdoors-v11\",\n      mapboxApiAccessToken: \"pk.eyJ1IjoiaHR1cm5lcjMwIiwiYSI6ImNrNjJhZWFkdjBiNnMzbm1tNHh1cDNlMWsifQ.0ZiYTbXUCbaJ2mxlibJjDg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Pins, {\n      data: CITIES,\n      onClick: this._onClickMarker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), this._renderPopup());\n  }\n\n}\n\nfunction App() {\n  // We pass onDrop function and accept prop to the component. It will be used as initial params for useDropzone hook\n  return React.createElement(\"main\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Map, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/harry/pu_frontend/src/App.js"],"names":["React","useState","mapboxgl","ReactMapGL","Marker","ICON","SIZE","CITIES","Pins","Component","render","props","data","onClick","map","city","index","longitude","latitude","cursor","fill","stroke","transform","Map","state","viewport","width","height","zoom","setState","_onClickMarker","_renderPopup","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,IAAoBC,MAApB,QAAiC,cAAjC;AAEA,MAAMC,IAAI,GAAI;;kCAAd;AAIA,MAAMC,IAAI,GAAG,EAAb;AAEA,MAAMC,MAAM,GAAG,CACb;AAAC,UAAO,UAAR;AAAmB,gBAAa,WAAhC;AAA4C,WAAQ,kGAApD;AAAuJ,WAAQ,UAA/J;AAA0K,cAAW,OAArL;AAA6L,eAAY,CAAC;AAA1M,CADa,CAAf;;AAIA,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAmC;AACjCC,EAAAA,MAAM,GAAG;AAAA,wBACiB,KAAKC,KADtB;AAAA,UACAC,IADA,eACAA,IADA;AAAA,UACMC,OADN,eACMA,OADN;AAGP,WAAOD,IAAI,CAACE,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KACd,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAG,UAASA,KAAM,EAA7B;AAAgC,MAAA,SAAS,EAAED,IAAI,CAACE,SAAhD;AAA2D,MAAA,QAAQ,EAAEF,IAAI,CAACG,QAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,MAAM,EAAEZ,IADV;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAE;AACLa,QAAAA,MAAM,EAAE,SADH;AAELC,QAAAA,IAAI,EAAE,MAFD;AAGLC,QAAAA,MAAM,EAAE,MAHH;AAILC,QAAAA,SAAS,EAAG,aAAY,CAAChB,IAAD,GAAQ,CAAE,MAAK,CAACA,IAAK;AAJxC,OAHT;AASE,MAAA,OAAO,EAAE,MAAMO,OAAO,CAACE,IAAD,CATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE;AAAM,MAAA,CAAC,EAAEV,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF,CADK,CAAP;AAiBD;;AArBgC;;AAwBnC,MAAMkB,GAAN,SAAkBvB,KAAK,CAACS,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCe,KAFgC,GAExB;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE,MADC;AAERC,QAAAA,MAAM,EAAE,IAFA;AAGRT,QAAAA,QAAQ,EAAE,OAHF;AAIRD,QAAAA,SAAS,EAAE,CAAC,MAJJ;AAKRW,QAAAA,IAAI,EAAE;AALE;AADJ,KAFwB;AAAA;;AAYhClB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,UAAD,oBACM,KAAKc,KAAL,CAAWC,QADjB;AAEE,MAAA,gBAAgB,EAAGA,QAAD,IAAc,KAAKI,QAAL,CAAc;AAACJ,QAAAA;AAAD,OAAd,CAFlC;AAGE,MAAA,QAAQ,EAAC,qCAHX;AAIE,MAAA,oBAAoB,EAAC,8FAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAElB,MAAZ;AAAoB,MAAA,OAAO,EAAE,KAAKuB,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOK,KAAKC,YAAL,EAPL,CADF;AAWD;;AAxB+B;;AA2BlC,SAASC,GAAT,GAAe;AAEb;AACA,SACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF;AAKD;;AAED,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport ReactMapGL, {Marker} from 'react-map-gl';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst SIZE = 20;\n\nconst CITIES = [\n  {\"city\":\"New York\",\"population\":\"8,175,133\",\"image\":\"http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Above_Gotham.jpg/240px-Above_Gotham.jpg\",\"state\":\"New York\",\"latitude\":51.5084,\"longitude\":-2.5927},\n]\n\nclass Pins extends React.Component {\n  render() {\n    const {data, onClick} = this.props;\n\n    return data.map((city, index) => (\n      <Marker key={`marker-${index}`} longitude={city.longitude} latitude={city.latitude}>\n        <svg\n          height={SIZE}\n          viewBox=\"0 0 24 24\"\n          style={{\n            cursor: 'pointer',\n            fill: '#d00',\n            stroke: 'none',\n            transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\n          }}\n          onClick={() => onClick(city)}\n        >\n          <path d={ICON} />\n        </svg>\n      </Marker>\n    ));\n  }\n}\n\nclass Map extends React.Component {\n\n  state = {\n    viewport: {\n      width: \"100%\",\n      height: 1000,\n      latitude: 51.5084,\n      longitude: -2.5927,\n      zoom: 16\n    }\n  };\n\n  render() {\n    return (\n      <ReactMapGL\n        {...this.state.viewport}\n        onViewportChange={(viewport) => this.setState({viewport})}\n        mapStyle='mapbox://styles/mapbox/outdoors-v11'\n        mapboxApiAccessToken='pk.eyJ1IjoiaHR1cm5lcjMwIiwiYSI6ImNrNjJhZWFkdjBiNnMzbm1tNHh1cDNlMWsifQ.0ZiYTbXUCbaJ2mxlibJjDg'\n      >\n          <Pins data={CITIES} onClick={this._onClickMarker} />\n          {this._renderPopup()}\n      </ReactMapGL>\n    );\n  }\n}\n\nfunction App() {\n\n  // We pass onDrop function and accept prop to the component. It will be used as initial params for useDropzone hook\n  return (\n    <main className=\"App\">\n        <Map/>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}