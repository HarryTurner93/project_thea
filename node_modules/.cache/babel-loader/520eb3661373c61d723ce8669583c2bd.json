{"ast":null,"code":"var _jsxFileName = \"/home/harry/pu_frontend/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport ReactMapGL, { Popup, NavigationControl, FullscreenControl, ScaleControl } from 'react-map-gl';\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\nconst SIZE = 20;\nconst CITIES = [{\n  \"city\": \"New York\",\n  \"population\": \"8,175,133\",\n  \"image\": \"http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Above_Gotham.jpg/240px-Above_Gotham.jpg\",\n  \"state\": \"New York\",\n  \"latitude\": 51.5084,\n  \"longitude\": -2.5927\n}];\n\nclass Pins extends React.Component {\n  render() {\n    const _this$props = this.props,\n          data = _this$props.data,\n          onClick = _this$props.onClick;\n    return data.map((city, index) => React.createElement(Marker, {\n      key: `marker-${index}`,\n      longitude: city.longitude,\n      latitude: city.latitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      height: SIZE,\n      viewBox: \"0 0 24 24\",\n      style: {\n        cursor: 'pointer',\n        fill: '#d00',\n        stroke: 'none',\n        transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\n      },\n      onClick: () => onClick(city),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: ICON,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass CityInfo extends React.Component {\n  render() {\n    const info = this.props.info;\n    const displayName = `${info.city}, ${info.state}`;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, displayName, \" |\", ' ', React.createElement(\"a\", {\n      target: \"_new\",\n      href: `http://en.wikipedia.org/w/index.php?title=Special:Search&search=${displayName}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Wikipedia\")), React.createElement(\"img\", {\n      width: 240,\n      src: info.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewport: {\n        width: \"100%\",\n        height: 1000,\n        latitude: 51.5084,\n        longitude: -2.5927,\n        zoom: 16\n      }\n    };\n  }\n\n  _renderPopup() {\n    const popupInfo = this.state.popupInfo;\n    return popupInfo && React.createElement(Popup, {\n      tipSize: 5,\n      anchor: \"top\",\n      longitude: popupInfo.longitude,\n      latitude: popupInfo.latitude,\n      closeOnClick: false,\n      onClose: () => this.setState({\n        popupInfo: null\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(CityInfo, {\n      info: popupInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(ReactMapGL, Object.assign({}, this.state.viewport, {\n      onViewportChange: viewport => this.setState({\n        viewport\n      }),\n      mapStyle: \"mapbox://styles/mapbox/outdoors-v11\",\n      mapboxApiAccessToken: \"pk.eyJ1IjoiaHR1cm5lcjMwIiwiYSI6ImNrNjJhZWFkdjBiNnMzbm1tNHh1cDNlMWsifQ.0ZiYTbXUCbaJ2mxlibJjDg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Pins, {\n      data: CITIES,\n      onClick: this._onClickMarker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), this._renderPopup());\n  }\n\n}\n\nfunction App() {\n  // We pass onDrop function and accept prop to the component. It will be used as initial params for useDropzone hook\n  return React.createElement(\"main\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Map, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/harry/pu_frontend/src/App.js"],"names":["React","useState","mapboxgl","ReactMapGL","Popup","NavigationControl","FullscreenControl","ScaleControl","ICON","SIZE","CITIES","Pins","Component","render","props","data","onClick","map","city","index","longitude","latitude","cursor","fill","stroke","transform","CityInfo","info","displayName","state","image","Map","viewport","width","height","zoom","_renderPopup","popupInfo","setState","_onClickMarker","App"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport ReactMapGL, {Popup, NavigationControl, FullscreenControl, ScaleControl} from 'react-map-gl';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst SIZE = 20;\n\nconst CITIES = [\n  {\"city\":\"New York\",\"population\":\"8,175,133\",\"image\":\"http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Above_Gotham.jpg/240px-Above_Gotham.jpg\",\"state\":\"New York\",\"latitude\":51.5084,\"longitude\":-2.5927},\n]\n\nclass Pins extends React.Component {\n  render() {\n    const {data, onClick} = this.props;\n\n    return data.map((city, index) => (\n      <Marker key={`marker-${index}`} longitude={city.longitude} latitude={city.latitude}>\n        <svg\n          height={SIZE}\n          viewBox=\"0 0 24 24\"\n          style={{\n            cursor: 'pointer',\n            fill: '#d00',\n            stroke: 'none',\n            transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\n          }}\n          onClick={() => onClick(city)}\n        >\n          <path d={ICON} />\n        </svg>\n      </Marker>\n    ));\n  }\n}\n\nclass CityInfo extends React.Component {\n  render() {\n    const {info} = this.props;\n    const displayName = `${info.city}, ${info.state}`;\n\n    return (\n      <div>\n        <div>\n          {displayName} |{' '}\n          <a\n            target=\"_new\"\n            href={`http://en.wikipedia.org/w/index.php?title=Special:Search&search=${displayName}`}\n          >\n            Wikipedia\n          </a>\n        </div>\n        <img width={240} src={info.image} />\n      </div>\n    );\n  }\n}\n\nclass Map extends React.Component {\n\n  state = {\n    viewport: {\n      width: \"100%\",\n      height: 1000,\n      latitude: 51.5084,\n      longitude: -2.5927,\n      zoom: 16\n    }\n  };\n\n  _renderPopup() {\n    const {popupInfo} = this.state;\n\n    return (\n      popupInfo && (\n        <Popup\n          tipSize={5}\n          anchor=\"top\"\n          longitude={popupInfo.longitude}\n          latitude={popupInfo.latitude}\n          closeOnClick={false}\n          onClose={() => this.setState({popupInfo: null})}\n        >\n          <CityInfo info={popupInfo} />\n        </Popup>\n      )\n    );\n  }\n\n  render() {\n    return (\n      <ReactMapGL\n        {...this.state.viewport}\n        onViewportChange={(viewport) => this.setState({viewport})}\n        mapStyle='mapbox://styles/mapbox/outdoors-v11'\n        mapboxApiAccessToken='pk.eyJ1IjoiaHR1cm5lcjMwIiwiYSI6ImNrNjJhZWFkdjBiNnMzbm1tNHh1cDNlMWsifQ.0ZiYTbXUCbaJ2mxlibJjDg'\n      >\n          <Pins data={CITIES} onClick={this._onClickMarker} />\n          {this._renderPopup()}\n      </ReactMapGL>\n    );\n  }\n}\n\nfunction App() {\n\n  // We pass onDrop function and accept prop to the component. It will be used as initial params for useDropzone hook\n  return (\n    <main className=\"App\">\n        <Map/>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}