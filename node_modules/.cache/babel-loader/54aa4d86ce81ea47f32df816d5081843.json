{"ast":null,"code":"var _jsxFileName = \"/home/harry/project_thea/src/components/alert.js\";\nimport React from \"react\";\nimport { sensor_data, alert_data } from \"../fake_data/fake_data\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\n\nclass AlertSummaryCard extends React.Component {\n  render() {\n    // Deconstruct props.\n    const _this$props = this.props,\n          alert_name = _this$props.alert_name,\n          alert_id = _this$props.alert_id,\n          cb_remove_alert = _this$props.cb_remove_alert; // Find the alert with the right name.\n\n    const alert = alert_data.filter(alert => alert.name === alert_name)[0]; // Find the associated sensor with the right name.\n\n    const sensor = sensor_data.filter(sensor => sensor.id === alert.sensor)[0];\n    return React.createElement(\"div\", {\n      style: {\n        paddingTop: '20px',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%',\n        backgroundColor: '#EEEEEE'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, alert_name), React.createElement(Typography, {\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"You will receive \", alert.notification_medium, \" when [\", sensor.name, \"] \", alert.trigger, \" \", alert.target, \".\")), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      onClick: () => cb_remove_alert(alert_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Delete\"))));\n  }\n\n}\n\nclass CreateAlertDialog extends React.Component {\n  constructor(props) {\n    super();\n\n    this.handleNameChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleSensorChange = event => {\n      // Find the sensor with the right id.\n      const sensor = this.props.sensors.filter(sensor => sensor.id == event.target.value)[0];\n      this.setState({\n        sensor: sensor\n      });\n    };\n\n    this.state = {\n      open: false,\n      name: \"\",\n      sensor: props.sensors[0]\n    };\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleCreate = this.handleCreate.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleSensorChange = this.handleSensorChange.bind(this);\n  }\n\n  handleClickOpen() {\n    this.setState(state => {\n      return {\n        open: true\n      };\n    });\n  }\n\n  handleClose() {\n    this.setState(state => {\n      return {\n        open: false,\n        name: \"\"\n      };\n    });\n  }\n\n  handleCreate() {\n    if (this.state.name !== \"\") {\n      this.setState(state => {\n        return {\n          open: false,\n          name: \"\"\n        };\n      });\n      this.props.cb_add_alert(this.state.name);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Create New Alert\"), React.createElement(Dialog, {\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Create Alert\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: {\n        paddingBottom: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"alert-name\",\n      label: \"Alert Name\",\n      value: this.state.name,\n      onChange: this.handleNameChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      style: {\n        paddingBottom: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Sensor\"), React.createElement(Select, {\n      native: true,\n      value: this.state.sensor,\n      onChange: this.handleSensorChange,\n      input: React.createElement(Input, {\n        id: \"demo-dialog-native\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.props.sensors.map(sensor => React.createElement(\"option\", {\n      value: sensor.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, sensor.name)))), React.createElement(FormControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      id: \"alert-dialog-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"This sensor is of type: \", this.state.sensor.type)))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleCreate,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Create\"))));\n  }\n\n}\n\nexport { AlertSummaryCard, CreateAlertDialog };","map":{"version":3,"sources":["/home/harry/project_thea/src/components/alert.js"],"names":["React","sensor_data","alert_data","Card","CardContent","Typography","CardActions","Button","TextField","Select","MenuItem","DialogActions","DialogContent","DialogContentText","Dialog","DialogTitle","InputLabel","Input","FormControl","AlertSummaryCard","Component","render","props","alert_name","alert_id","cb_remove_alert","alert","filter","name","sensor","id","paddingTop","width","backgroundColor","display","flexDirection","alignItems","notification_medium","trigger","target","CreateAlertDialog","constructor","handleNameChange","event","setState","value","handleSensorChange","sensors","state","open","handleClickOpen","bind","handleClose","handleCreate","cb_add_alert","paddingBottom","map","type"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {sensor_data, alert_data} from \"../fake_data/fake_data\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\n\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\n\n\nclass AlertSummaryCard extends React.Component {\n    render() {\n\n        // Deconstruct props.\n        const { alert_name, alert_id, cb_remove_alert } = this.props;\n\n        // Find the alert with the right name.\n        const alert = alert_data.filter(alert => alert.name === alert_name)[0];\n\n        // Find the associated sensor with the right name.\n        const sensor = sensor_data.filter(sensor => sensor.id === alert.sensor)[0];\n\n        return (\n            <div style={{paddingTop: '20px', width: '100%'}}>\n                <Card style={{width: '100%', backgroundColor: '#EEEEEE'}}>\n                  <CardContent style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-start'}}>\n                      <Typography variant=\"h5\" component=\"h2\">\n                          {alert_name}\n                      </Typography>\n                      <Typography color=\"textSecondary\">\n                          You will receive {alert.notification_medium} when [{sensor.name}] {alert.trigger} {alert.target}.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\" onClick={() => cb_remove_alert(alert_id)}>Delete</Button>\n                  </CardActions>\n                </Card>\n            </div>\n        )\n    }\n}\n\nclass CreateAlertDialog extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            open: false,\n            name: \"\",\n            sensor: props.sensors[0]\n        };\n\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleCreate = this.handleCreate.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleSensorChange = this.handleSensorChange.bind(this);\n    }\n\n    handleClickOpen()  {\n        this.setState((state) => {\n            return {open: true}\n        })\n    }\n\n    handleNameChange = (event) => {\n        this.setState({\n            name: event.target.value,\n        });\n    };\n\n    handleSensorChange = (event) => {\n\n        // Find the sensor with the right id.\n        const sensor = this.props.sensors.filter(sensor => sensor.id == event.target.value)[0];\n\n        this.setState({\n            sensor: sensor\n        });\n    };\n\n    handleClose() {\n        this.setState((state) => {\n            return {open: false, name: \"\"}\n        })\n    }\n\n    handleCreate() {\n        if (this.state.name !== \"\") {\n            this.setState((state) => {\n                return {open: false, name: \"\"}\n            });\n            this.props.cb_add_alert(this.state.name);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n                    Create New Alert\n                </Button>\n                <Dialog disableBackdropClick disableEscapeKeyDown open={this.state.open} onClose={this.handleClose}>\n                    <DialogTitle>Create Alert</DialogTitle>\n                    <DialogContent>\n                        <form style={{display: 'flex', flexDirection: 'column'}}>\n                            <FormControl style={{paddingBottom: '20px'}}>\n                                <TextField\n                                    id=\"alert-name\"\n                                    label=\"Alert Name\"\n                                    value={this.state.name}\n                                    onChange={this.handleNameChange}\n                                    variant=\"outlined\"\n                                />\n                            </FormControl>\n                            <FormControl style={{paddingBottom: '20px'}}>\n                                <InputLabel htmlFor=\"demo-dialog-native\">Sensor</InputLabel>\n                                <Select\n                                    native\n                                    value={this.state.sensor}\n                                    onChange={this.handleSensorChange}\n                                    input={<Input id=\"demo-dialog-native\" />}\n                                >\n                                    {this.props.sensors.map(sensor => (\n                                        <option value={sensor.id}>{sensor.name}</option>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                            <FormControl>\n                                <DialogContentText id=\"alert-dialog-description\">\n                                    This sensor is of type: {this.state.sensor.type}\n                                </DialogContentText>\n                            </FormControl>\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">Cancel</Button>\n                        <Button onClick={this.handleCreate} color=\"primary\">Create</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport { AlertSummaryCard, CreateAlertDialog };"]},"metadata":{},"sourceType":"module"}