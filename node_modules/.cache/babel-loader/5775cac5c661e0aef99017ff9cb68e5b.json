{"ast":null,"code":"var _jsxFileName = \"/home/harry/project_thea/src/components/bristolPollutionCard.js\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\n\nclass BristolPollutionCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        chart: {\n          id: props.title,\n          type: 'line'\n        },\n        xaxis: {\n          categories: [],\n          labels: {\n            show: false\n          }\n        },\n        yaxis: {\n          title: {\n            text: props.y_axis_label,\n            style: {\n              fontSize: '14px'\n            }\n          }\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 1\n        },\n        tooltip: {\n          marker: {\n            show: false\n          }\n        }\n      },\n      series: [{\n        name: 'series-1',\n        data: []\n      }]\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.api).then(res => res.json()).then(result => {\n      let data = [];\n      let categories = [];\n      let datasetid = \"\";\n      result.records.forEach((item, index) => {\n        const value = item.fields.pm10;\n        const c = item.fields.date.split(':')[0];\n        const c_list = c.split('T');\n        const c_date = c_list[0];\n        const c_hour = c_list[1];\n        const category = c_date;\n        data.unshift(value);\n        categories.unshift(category);\n        datasetid = item.datasetid;\n      }); // Update the state.\n\n      this.setState({\n        options: {\n          xaxis: {\n            categories: categories\n          }\n        },\n        series: [{\n          name: datasetid,\n          data: data\n        }]\n      });\n    }, error => {});\n  }\n\n  render() {\n    return React.createElement(Chart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"line\",\n      width: \"100%\",\n      height: 320,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default BristolPollutionCard;","map":{"version":3,"sources":["/home/harry/project_thea/src/components/bristolPollutionCard.js"],"names":["React","Chart","BristolPollutionCard","Component","constructor","props","state","options","chart","id","title","type","xaxis","categories","labels","show","yaxis","text","y_axis_label","style","fontSize","stroke","curve","width","tooltip","marker","series","name","data","componentDidMount","fetch","api","then","res","json","result","datasetid","records","forEach","item","index","value","fields","pm10","c","date","split","c_list","c_date","c_hour","category","unshift","setState","error","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from 'react-apexcharts'\n\nclass BristolPollutionCard extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\toptions: {\n\t\t\t\tchart: {\n\t\t\t\t\tid: props.title,\n\t\t\t\t\ttype: 'line'\n\t\t\t\t},\n\t\t\t\txaxis: {\n\t\t\t\t\tcategories: [],\n\t\t\t\t\tlabels: { show: false }\n\t\t\t\t},\n\t\t\t\tyaxis: {\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: props.y_axis_label,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tfontSize: '14px'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstroke: {\n\t\t\t\t\tcurve: 'smooth',\n\t\t\t\t\twidth: 1\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tmarker: { show: false }\n\t\t\t\t}\n\t\t\t},\n\t\t\tseries: [{\n\t\t\t\tname: 'series-1',\n\t\t\t\tdata: []\n\t\t\t}]\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(this.props.api)\n\t\t\t.then(res => res.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tlet data = [];\n\t\t\t\t\tlet categories = [];\n\t\t\t\t\tlet datasetid = \"\";\n\t\t\t\t\tresult.records.forEach((item, index) => {\n\t\t\t\t\t\tconst value = item.fields.pm10;\n\t\t\t\t\t\tconst c = item.fields.date.split(':')[0];\n\t\t\t\t\t\tconst c_list = c.split('T');\n\t\t\t\t\t\tconst c_date = c_list[0];\n\t\t\t\t\t\tconst c_hour = c_list[1];\n\t\t\t\t\t\tconst category = c_date\n\t\t\t\t\t\tdata.unshift(value);\n\t\t\t\t\t\tcategories.unshift(category);\n\t\t\t\t\t\tdatasetid = item.datasetid;\n\t\t\t\t\t});\n\n\t\t\t\t\t// Update the state.\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\txaxis: {\n\t\t\t\t\t\t\t\tcategories: categories\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tseries: [{\n\t\t\t\t\t\t\tname: datasetid,\n\t\t\t\t\t\t\tdata: data\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\n\n\t\t\t\t},\n\t\t\t\t(error) => {\n\n\t\t\t\t}\n\t\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Chart options={this.state.options} series={this.state.series} type=\"line\" width='100%' height={320} />\n\t\t\t)\n\t}\n}\n\nexport default BristolPollutionCard;"]},"metadata":{},"sourceType":"module"}