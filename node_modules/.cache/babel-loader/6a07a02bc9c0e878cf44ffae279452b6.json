{"ast":null,"code":"var _jsxFileName = \"/home/harry/project_thea/src/components/chartCard.js\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\n\nclass ChartCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        chart: {\n          id: props.title,\n          type: 'line'\n        },\n        xaxis: {\n          categories: [],\n          labels: {\n            show: false\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'test'\n          }\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 1\n        },\n        tooltip: {\n          marker: {\n            show: false\n          }\n        }\n      },\n      series: [{\n        name: 'series-1',\n        data: []\n      }]\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.api).then(res => res.json()).then(result => {\n      let data = [];\n      let categories = [];\n      let datasetid = \"\";\n      result.records.forEach((item, index) => {\n        const value = item.fields.pm10;\n        const category = item.fields.date.split('T')[0];\n        data.push(value);\n        categories.push(category);\n        datasetid = item.datasetid;\n      }); // Update the state.\n\n      this.setState({\n        options: {\n          xaxis: {\n            categories: categories\n          }\n        },\n        series: [{\n          name: datasetid,\n          data: data\n        }]\n      });\n    }, error => {});\n  }\n\n  render() {\n    return React.createElement(Chart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"line\",\n      width: \"100%\",\n      height: 320,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default ChartCard;","map":{"version":3,"sources":["/home/harry/project_thea/src/components/chartCard.js"],"names":["React","Chart","ChartCard","Component","constructor","props","state","options","chart","id","title","type","xaxis","categories","labels","show","yaxis","text","stroke","curve","width","tooltip","marker","series","name","data","componentDidMount","fetch","api","then","res","json","result","datasetid","records","forEach","item","index","value","fields","pm10","category","date","split","push","setState","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE;AACRC,QAAAA,KAAK,EAAE;AACNC,UAAAA,EAAE,EAAEJ,KAAK,CAACK,KADJ;AAENC,UAAAA,IAAI,EAAE;AAFA,SADC;AAKRC,QAAAA,KAAK,EAAE;AACNC,UAAAA,UAAU,EAAE,EADN;AAENC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR;AAFF,SALC;AASRC,QAAAA,KAAK,EAAE;AACNN,UAAAA,KAAK,EAAE;AAAEO,YAAAA,IAAI,EAAE;AAAR;AADD,SATC;AAYRC,QAAAA,MAAM,EAAE;AACPC,UAAAA,KAAK,EAAE,QADA;AAEPC,UAAAA,KAAK,EAAE;AAFA,SAZA;AAgBRC,QAAAA,OAAO,EAAE;AACRC,UAAAA,MAAM,EAAE;AAAEP,YAAAA,IAAI,EAAE;AAAR;AADA;AAhBD,OADG;AAqBZQ,MAAAA,MAAM,EAAE,CAAC;AACRC,QAAAA,IAAI,EAAE,UADE;AAERC,QAAAA,IAAI,EAAE;AAFE,OAAD;AArBI,KAAb;AA0BA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC,KAAKtB,KAAL,CAAWuB,GAAZ,CAAL,CACEC,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAGGG,MAAD,IAAY;AACX,UAAIP,IAAI,GAAG,EAAX;AACA,UAAIZ,UAAU,GAAG,EAAjB;AACA,UAAIoB,SAAS,GAAG,EAAhB;AACAD,MAAAA,MAAM,CAACE,OAAP,CAAeC,OAAf,CAAuB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC,cAAMC,KAAK,GAAGF,IAAI,CAACG,MAAL,CAAYC,IAA1B;AACA,cAAMC,QAAQ,GAAGL,IAAI,CAACG,MAAL,CAAYG,IAAZ,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAjB;AACAlB,QAAAA,IAAI,CAACmB,IAAL,CAAUN,KAAV;AACAzB,QAAAA,UAAU,CAAC+B,IAAX,CAAgBH,QAAhB;AACAR,QAAAA,SAAS,GAAGG,IAAI,CAACH,SAAjB;AACA,OAND,EAJW,CAYX;;AACA,WAAKY,QAAL,CAAc;AACbtC,QAAAA,OAAO,EAAE;AACRK,UAAAA,KAAK,EAAE;AACNC,YAAAA,UAAU,EAAEA;AADN;AADC,SADI;AAMbU,QAAAA,MAAM,EAAE,CAAC;AACRC,UAAAA,IAAI,EAAES,SADE;AAERR,UAAAA,IAAI,EAAEA;AAFE,SAAD;AANK,OAAd;AAYA,KA5BH,EA6BGqB,KAAD,IAAW,CAEV,CA/BH;AAiCA;;AAEDC,EAAAA,MAAM,GAAG;AACR,WACC,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKzC,KAAL,CAAWC,OAA3B;AAAoC,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWiB,MAAvD;AAA+D,MAAA,IAAI,EAAC,MAApE;AAA2E,MAAA,KAAK,EAAC,MAAjF;AAAwF,MAAA,MAAM,EAAE,GAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGA;;AAxEsC;;AA2ExC,eAAerB,SAAf","sourcesContent":["import React from 'react';\nimport Chart from 'react-apexcharts'\n\nclass ChartCard extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\toptions: {\n\t\t\t\tchart: {\n\t\t\t\t\tid: props.title,\n\t\t\t\t\ttype: 'line'\n\t\t\t\t},\n\t\t\t\txaxis: {\n\t\t\t\t\tcategories: [],\n\t\t\t\t\tlabels: { show: false }\n\t\t\t\t},\n\t\t\t\tyaxis: {\n\t\t\t\t\ttitle: { text: 'test' }\n\t\t\t\t},\n\t\t\t\tstroke: {\n\t\t\t\t\tcurve: 'smooth',\n\t\t\t\t\twidth: 1\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tmarker: { show: false }\n\t\t\t\t}\n\t\t\t},\n\t\t\tseries: [{\n\t\t\t\tname: 'series-1',\n\t\t\t\tdata: []\n\t\t\t}]\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(this.props.api)\n\t\t\t.then(res => res.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tlet data = [];\n\t\t\t\t\tlet categories = [];\n\t\t\t\t\tlet datasetid = \"\";\n\t\t\t\t\tresult.records.forEach((item, index) => {\n\t\t\t\t\t\tconst value = item.fields.pm10;\n\t\t\t\t\t\tconst category = item.fields.date.split('T')[0];\n\t\t\t\t\t\tdata.push(value);\n\t\t\t\t\t\tcategories.push(category);\n\t\t\t\t\t\tdatasetid = item.datasetid;\n\t\t\t\t\t});\n\n\t\t\t\t\t// Update the state.\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\txaxis: {\n\t\t\t\t\t\t\t\tcategories: categories\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tseries: [{\n\t\t\t\t\t\t\tname: datasetid,\n\t\t\t\t\t\t\tdata: data\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\n\n\t\t\t\t},\n\t\t\t\t(error) => {\n\n\t\t\t\t}\n\t\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Chart options={this.state.options} series={this.state.series} type=\"line\" width='100%' height={320} />\n\t\t\t)\n\t}\n}\n\nexport default ChartCard;"]},"metadata":{},"sourceType":"module"}