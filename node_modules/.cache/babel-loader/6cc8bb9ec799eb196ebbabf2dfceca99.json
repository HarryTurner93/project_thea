{"ast":null,"code":"var _jsxFileName = \"/home/harry/pu_frontend/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport ReactMapGL, { Marker, Popup, NavigationControl, FullscreenControl, ScaleControl } from 'react-map-gl';\nconst CITIES = [{\n  \"city\": \"New York\",\n  \"population\": \"8,175,133\",\n  \"image\": \"http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Above_Gotham.jpg/240px-Above_Gotham.jpg\",\n  \"state\": \"New York\",\n  \"latitude\": 51.5084,\n  \"longitude\": -2.5927\n}];\n\nclass Pins extends React.Component {\n  render() {\n    const _this$props = this.props,\n          data = _this$props.data,\n          onClick = _this$props.onClick;\n    return data.map((city, index) => React.createElement(Marker, {\n      key: `marker-${index}`,\n      longitude: city.longitude,\n      latitude: city.latitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/emoji/48/000000/badger-emoji.png\",\n      alt: \"BADGER\",\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => onClick(city),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass CityInfo extends React.Component {\n  render() {\n    const info = this.props.info;\n    const displayName = `${info.city}, ${info.state}`;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, displayName, \" |\", ' ', React.createElement(\"a\", {\n      target: \"_new\",\n      href: `http://en.wikipedia.org/w/index.php?title=Special:Search&search=${displayName}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Wikipedia\")), React.createElement(\"img\", {\n      width: 240,\n      src: info.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewport: {\n        width: \"100%\",\n        height: 1000,\n        latitude: 51.5084,\n        longitude: -2.5927,\n        zoom: 16\n      }\n    };\n\n    this._updateViewport = viewport => {\n      this.setState({\n        viewport\n      });\n    };\n\n    this._onClickMarker = city => {\n      this.setState({\n        popupInfo: city\n      });\n    };\n  }\n\n  _renderPopup() {\n    const popupInfo = this.state.popupInfo;\n    return popupInfo && React.createElement(Popup, {\n      tipSize: 5,\n      anchor: \"top\",\n      longitude: popupInfo.longitude,\n      latitude: popupInfo.latitude,\n      closeOnClick: false,\n      onClose: () => this.setState({\n        popupInfo: null\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(CityInfo, {\n      info: popupInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(ReactMapGL, Object.assign({}, this.state.viewport, {\n      onViewportChange: viewport => this.setState({\n        viewport\n      }),\n      mapStyle: \"mapbox://styles/mapbox/outdoors-v11\",\n      mapboxApiAccessToken: \"pk.eyJ1IjoiaHR1cm5lcjMwIiwiYSI6ImNrNjJhZWFkdjBiNnMzbm1tNHh1cDNlMWsifQ.0ZiYTbXUCbaJ2mxlibJjDg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Pins, {\n      data: CITIES,\n      onClick: this._onClickMarker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), this._renderPopup());\n  }\n\n}\n\nfunction App() {\n  // We pass onDrop function and accept prop to the component. It will be used as initial params for useDropzone hook\n  return React.createElement(\"main\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Map, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/harry/pu_frontend/src/App.js"],"names":["React","useState","mapboxgl","ReactMapGL","Marker","Popup","NavigationControl","FullscreenControl","ScaleControl","CITIES","Pins","Component","render","props","data","onClick","map","city","index","longitude","latitude","cursor","CityInfo","info","displayName","state","image","Map","viewport","width","height","zoom","_updateViewport","setState","_onClickMarker","popupInfo","_renderPopup","App"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport ReactMapGL, {Marker, Popup, NavigationControl, FullscreenControl, ScaleControl} from 'react-map-gl';\n\nconst CITIES = [\n  {\"city\":\"New York\",\"population\":\"8,175,133\",\"image\":\"http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Above_Gotham.jpg/240px-Above_Gotham.jpg\",\"state\":\"New York\",\"latitude\":51.5084,\"longitude\":-2.5927},\n]\n\nclass Pins extends React.Component {\n  render() {\n    const {data, onClick} = this.props;\n\n    return data.map((city, index) => (\n      <Marker key={`marker-${index}`} longitude={city.longitude} latitude={city.latitude}>\n         <img src=\"https://img.icons8.com/emoji/48/000000/badger-emoji.png\"\n              alt=\"BADGER\"\n              style={{cursor: 'pointer'}}\n              onClick={() => onClick(city)}/>\n      </Marker>\n    ));\n  }\n}\n\nclass CityInfo extends React.Component {\n  render() {\n    const {info} = this.props;\n    const displayName = `${info.city}, ${info.state}`;\n\n    return (\n      <div>\n        <div>\n          {displayName} |{' '}\n          <a\n            target=\"_new\"\n            href={`http://en.wikipedia.org/w/index.php?title=Special:Search&search=${displayName}`}\n          >\n            Wikipedia\n          </a>\n        </div>\n        <img width={240} src={info.image} />\n      </div>\n    );\n  }\n}\n\nclass Map extends React.Component {\n\n  state = {\n    viewport: {\n      width: \"100%\",\n      height: 1000,\n      latitude: 51.5084,\n      longitude: -2.5927,\n      zoom: 16\n    }\n  };\n\n  _updateViewport = viewport => {\n    this.setState({viewport});\n  };\n\n  _onClickMarker = city => {\n    this.setState({popupInfo: city});\n  };\n\n  _renderPopup() {\n    const {popupInfo} = this.state;\n\n    return (\n      popupInfo && (\n        <Popup\n          tipSize={5}\n          anchor=\"top\"\n          longitude={popupInfo.longitude}\n          latitude={popupInfo.latitude}\n          closeOnClick={false}\n          onClose={() => this.setState({popupInfo: null})}\n        >\n          <CityInfo info={popupInfo} />\n        </Popup>\n      )\n    );\n  }\n\n  render() {\n    return (\n      <ReactMapGL\n        {...this.state.viewport}\n        onViewportChange={(viewport) => this.setState({viewport})}\n        mapStyle='mapbox://styles/mapbox/outdoors-v11'\n        mapboxApiAccessToken='pk.eyJ1IjoiaHR1cm5lcjMwIiwiYSI6ImNrNjJhZWFkdjBiNnMzbm1tNHh1cDNlMWsifQ.0ZiYTbXUCbaJ2mxlibJjDg'\n      >\n          <Pins data={CITIES} onClick={this._onClickMarker} />\n          {this._renderPopup()}\n      </ReactMapGL>\n    );\n  }\n}\n\nfunction App() {\n\n  // We pass onDrop function and accept prop to the component. It will be used as initial params for useDropzone hook\n  return (\n    <main className=\"App\">\n        <Map/>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}