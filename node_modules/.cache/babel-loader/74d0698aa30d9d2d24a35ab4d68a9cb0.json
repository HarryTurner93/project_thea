{"ast":null,"code":"var _jsxFileName = \"/home/harry/pu_frontend/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport ReactMapGL, { Marker, Popup, NavigationControl, FullscreenControl, ScaleControl } from 'react-map-gl';\nimport sensor_icon from './icons/sensor.png';\nimport camera_trap_icon from './icons/camera_trap.png';\nconst SENSORS = [{\n  \"type\": \"Sensor Tower\",\n  \"latitude\": 51.5094,\n  \"longitude\": -2.5890,\n  \"id\": 1,\n  \"icon\": sensor_icon\n}, {\n  \"type\": \"Sensor Tower\",\n  \"latitude\": 51.5100,\n  \"longitude\": -2.5957,\n  \"id\": 2,\n  \"icon\": sensor_icon\n}, {\n  \"type\": \"Camera Trap\",\n  \"latitude\": 51.5110,\n  \"longitude\": -2.5917,\n  \"id\": 1,\n  \"icon\": camera_trap_icon\n}];\nconst ICON_SIZE = 80;\n\nclass Sensors extends React.Component {\n  render() {\n    const _this$props = this.props,\n          data = _this$props.data,\n          onClick = _this$props.onClick;\n    return data.map((sensor, index) => React.createElement(Marker, {\n      key: `marker-${index}`,\n      longitude: sensor.longitude,\n      latitude: sensor.latitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => onClick(sensor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: sensor.icon,\n      style: {\n        width: `${ICON_SIZE}px`,\n        transform: `translate(${-ICON_SIZE / 2}px,${-ICON_SIZE}px)`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass SensorInfo extends React.Component {\n  render() {\n    const info = this.props.info;\n    return React.createElement(\"div\", {\n      style: {\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        paddingBottom: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, `${info.type}: ${info.id}`)), info.type === \"Camera Trap\" ? React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Upload Images\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewport: {\n        width: \"100%\",\n        height: 1000,\n        latitude: 51.5084,\n        longitude: -2.5927,\n        zoom: 16\n      }\n    };\n\n    this._updateViewport = viewport => {\n      this.setState({\n        viewport\n      });\n    };\n\n    this._onClickMarker = city => {\n      this.setState({\n        popupInfo: city\n      });\n    };\n  }\n\n  _renderPopup() {\n    const popupInfo = this.state.popupInfo;\n    return popupInfo && React.createElement(Popup, {\n      tipSize: 5,\n      anchor: \"top\",\n      longitude: popupInfo.longitude,\n      latitude: popupInfo.latitude,\n      closeOnClick: false,\n      onClose: () => this.setState({\n        popupInfo: null\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(SensorInfo, {\n      info: popupInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(ReactMapGL, Object.assign({}, this.state.viewport, {\n      onViewportChange: viewport => this.setState({\n        viewport\n      }),\n      mapStyle: \"mapbox://styles/hturner30/ck62e8klf0xzn1ithmmtve3iq\",\n      mapboxApiAccessToken: \"pk.eyJ1IjoiaHR1cm5lcjMwIiwiYSI6ImNrNjJhZWFkdjBiNnMzbm1tNHh1cDNlMWsifQ.0ZiYTbXUCbaJ2mxlibJjDg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), this.state.viewport.zoom >= 15 ? React.createElement(Sensors, {\n      data: SENSORS,\n      onClick: this._onClickMarker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }) : null, this._renderPopup());\n  }\n\n}\n\nfunction App() {\n  // We pass onDrop function and accept prop to the component. It will be used as initial params for useDropzone hook\n  return React.createElement(\"main\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Map, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/harry/pu_frontend/src/App.js"],"names":["React","useState","mapboxgl","ReactMapGL","Marker","Popup","NavigationControl","FullscreenControl","ScaleControl","sensor_icon","camera_trap_icon","SENSORS","ICON_SIZE","Sensors","Component","render","props","data","onClick","map","sensor","index","longitude","latitude","cursor","icon","width","transform","SensorInfo","info","padding","paddingBottom","type","id","display","Map","state","viewport","height","zoom","_updateViewport","setState","_onClickMarker","city","popupInfo","_renderPopup","App"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport ReactMapGL, {Marker, Popup, NavigationControl, FullscreenControl, ScaleControl} from 'react-map-gl';\n\nimport sensor_icon from './icons/sensor.png';\nimport camera_trap_icon from './icons/camera_trap.png';\n\nconst SENSORS = [\n    {\"type\": \"Sensor Tower\", \"latitude\":51.5094, \"longitude\":-2.5890, \"id\": 1, \"icon\": sensor_icon},\n    {\"type\": \"Sensor Tower\",\"latitude\":51.5100,\"longitude\":-2.5957, \"id\": 2, \"icon\": sensor_icon},\n    {\"type\": \"Camera Trap\",\"latitude\":51.5110,\"longitude\":-2.5917, \"id\": 1, \"icon\": camera_trap_icon}\n];\n\nconst ICON_SIZE = 80;\n\n\nclass Sensors extends React.Component {\n  render() {\n    const {data, onClick} = this.props;\n\n    return data.map((sensor, index) => (\n      <Marker key={`marker-${index}`} longitude={sensor.longitude} latitude={sensor.latitude}>\n          <div style={{cursor: 'pointer'}} onClick={() => onClick(sensor)}>\n             <img src={sensor.icon}\n                  style={{\n                      width: `${ICON_SIZE}px`,\n                      transform: `translate(${-ICON_SIZE / 2}px,${-ICON_SIZE}px)`}}/>\n          </div>\n      </Marker>\n    ));\n  }\n}\n\nclass SensorInfo extends React.Component {\n  render() {\n    const {info} = this.props;\n\n    return (\n      <div style={{padding: \"10px\"}}>\n          <div style={{paddingBottom: \"5px\"}}><b>{`${info.type}: ${info.id}`}</b></div>\n          {(info.type === \"Camera Trap\")\n              ? <div style={{display: \"flex\"}}>\n                  <div>Upload Images</div>\n                </div>\n              : <div>\n\n                </div>\n          }\n      </div>\n    );\n  }\n}\n\nclass Map extends React.Component {\n\n  state = {\n    viewport: {\n      width: \"100%\",\n      height: 1000,\n      latitude: 51.5084,\n      longitude: -2.5927,\n      zoom: 16\n    }\n  };\n\n  _updateViewport = viewport => {\n    this.setState({viewport});\n  };\n\n  _onClickMarker = city => {\n    this.setState({popupInfo: city});\n  };\n\n  _renderPopup() {\n    const {popupInfo} = this.state;\n\n    return (\n      popupInfo && (\n        <Popup\n          tipSize={5}\n          anchor=\"top\"\n          longitude={popupInfo.longitude}\n          latitude={popupInfo.latitude}\n          closeOnClick={false}\n          onClose={() => this.setState({popupInfo: null})}\n        >\n          <SensorInfo info={popupInfo} />\n        </Popup>\n      )\n    );\n  }\n\n  render() {\n    return (\n      <ReactMapGL\n        {...this.state.viewport}\n        onViewportChange={(viewport) => this.setState({viewport})}\n        mapStyle='mapbox://styles/hturner30/ck62e8klf0xzn1ithmmtve3iq'\n        mapboxApiAccessToken='pk.eyJ1IjoiaHR1cm5lcjMwIiwiYSI6ImNrNjJhZWFkdjBiNnMzbm1tNHh1cDNlMWsifQ.0ZiYTbXUCbaJ2mxlibJjDg'\n      >\n          {(this.state.viewport.zoom >= 15)\n              ? <Sensors data={SENSORS} onClick={this._onClickMarker}/>\n              : null\n          }\n          {this._renderPopup()}\n      </ReactMapGL>\n    );\n  }\n}\n\nfunction App() {\n\n  // We pass onDrop function and accept prop to the component. It will be used as initial params for useDropzone hook\n  return (\n    <main className=\"App\">\n        <Map/>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}