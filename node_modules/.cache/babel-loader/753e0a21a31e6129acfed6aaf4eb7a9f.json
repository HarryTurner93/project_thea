{"ast":null,"code":"var _jsxFileName = \"/home/harry/project_thea/src/components/pollutionCard.js\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\n\nclass PollutionCard extends React.Component {\n  render() {\n    // Deconstruct props.\n    const _this$props = this.props,\n          information = _this$props.information,\n          source_site = _this$props.source_site,\n          api = _this$props.api,\n          y_axis_label = _this$props.y_axis_label;\n    return React.createElement(\"div\", {\n      style: {\n        padding: \"20px\",\n        paddingTop: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: \"20px\",\n        backgroundColor: \"#CFCFCF\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Data: Air Quality\")), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%',\n        flexDirection: 'column',\n        alignItems: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        display: 'flex',\n        justifyContent: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, information)), React.createElement(\"div\", {\n      style: {\n        paddingBottom: '10px',\n        display: 'flex',\n        justifyContent: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Source: \", React.createElement(\"a\", {\n      href: source_site,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, source_site))), React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(PollutionChart, {\n      api: api,\n      y_axis_label: y_axis_label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nclass PollutionChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        chart: {\n          id: props.title,\n          type: 'line'\n        },\n        xaxis: {\n          categories: [],\n          labels: {\n            show: false\n          }\n        },\n        yaxis: {\n          title: {\n            text: props.y_axis_label,\n            style: {\n              fontSize: '14px'\n            }\n          }\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 1\n        },\n        tooltip: {\n          marker: {\n            show: false\n          }\n        }\n      },\n      series: [{\n        name: 'series-1',\n        data: []\n      }]\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.api).then(res => res.json()).then(result => {\n      let data = [];\n      let categories = [];\n      let datasetid = \"\";\n      result.records.forEach((item, index) => {\n        const value = item.fields.pm10;\n        const c_both = item.fields.date.split('+')[0];\n        const c_date = c_both.split('T')[0];\n        const c_time = c_both.split('T')[1];\n        const category = c_date + \" \" + c_time;\n        data.unshift(value);\n        categories.unshift(category);\n        datasetid = item.datasetid;\n      }); // Update the state.\n\n      this.setState({\n        options: {\n          xaxis: {\n            categories: categories\n          }\n        },\n        series: [{\n          name: datasetid,\n          data: data\n        }]\n      });\n    }, error => {});\n  }\n\n  render() {\n    return React.createElement(Chart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"line\",\n      width: \"100%\",\n      height: 320,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default PollutionCard;","map":{"version":3,"sources":["/home/harry/project_thea/src/components/pollutionCard.js"],"names":["React","Chart","PollutionCard","Component","render","props","information","source_site","api","y_axis_label","padding","paddingTop","backgroundColor","display","flexDirection","alignItems","width","paddingBottom","justifyContent","PollutionChart","constructor","state","options","chart","id","title","type","xaxis","categories","labels","show","yaxis","text","style","fontSize","stroke","curve","tooltip","marker","series","name","data","componentDidMount","fetch","then","res","json","result","datasetid","records","forEach","item","index","value","fields","pm10","c_both","date","split","c_date","c_time","category","unshift","setState","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAExCC,EAAAA,MAAM,GAAG;AAEL;AAFK,wBAGmD,KAAKC,KAHxD;AAAA,UAGGC,WAHH,eAGGA,WAHH;AAAA,UAGgBC,WAHhB,eAGgBA,WAHhB;AAAA,UAG6BC,GAH7B,eAG6BA,GAH7B;AAAA,UAGkCC,YAHlC,eAGkCA,YAHlC;AAKL,WACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,UAAU,EAAE;AAA9B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAE,MAAV;AAAkBE,QAAAA,eAAe,EAAC,SAAlC;AAA6CC,QAAAA,OAAO,EAAE,MAAtD;AAA8DC,QAAAA,aAAa,EAAE,QAA7E;AAAuFC,QAAAA,UAAU,EAAE;AAAnG,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAL,CADJ,EAEI;AAAK,MAAA,KAAK,EAAE;AAACF,QAAAA,OAAO,EAAE,MAAV;AAAkBG,QAAAA,KAAK,EAAE,MAAzB;AAAiCF,QAAAA,aAAa,EAAE,QAAhD;AAA0DC,QAAAA,UAAU,EAAE;AAAtE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACJ,QAAAA,UAAU,EAAE,MAAb;AAAqBM,QAAAA,aAAa,EAAE,MAApC;AAA4CJ,QAAAA,OAAO,EAAE,MAArD;AAA6DK,QAAAA,cAAc,EAAE;AAA7E,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIZ,WAAJ,CADJ,CADJ,EAII;AAAK,MAAA,KAAK,EAAE;AAACW,QAAAA,aAAa,EAAE,MAAhB;AAAwBJ,QAAAA,OAAO,EAAE,MAAjC;AAAyCK,QAAAA,cAAc,EAAE;AAAzD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAW;AAAG,MAAA,IAAI,EAAEX,WAAT;AAAsB,MAAA,MAAM,EAAC,QAA7B;AAAsC,MAAA,GAAG,EAAC,qBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiEA,WAAjE,CAAX,CADJ,CAJJ,EAOI;AAAK,MAAA,KAAK,EAAE;AAACS,QAAAA,KAAK,EAAE;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AACI,MAAA,GAAG,EAAER,GADT;AAEI,MAAA,YAAY,EAAEC,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAFJ,CADJ,CADJ;AAqBH;;AA5BuC;;AA+B5C,MAAMU,cAAN,SAA6BnB,KAAK,CAACG,SAAnC,CAA6C;AAC5CiB,EAAAA,WAAW,CAACf,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKgB,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE;AACRC,QAAAA,KAAK,EAAE;AACNC,UAAAA,EAAE,EAAEnB,KAAK,CAACoB,KADJ;AAENC,UAAAA,IAAI,EAAE;AAFA,SADC;AAKRC,QAAAA,KAAK,EAAE;AACNC,UAAAA,UAAU,EAAE,EADN;AAENC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR;AAFF,SALC;AASRC,QAAAA,KAAK,EAAE;AACNN,UAAAA,KAAK,EAAE;AACNO,YAAAA,IAAI,EAAE3B,KAAK,CAACI,YADN;AAENwB,YAAAA,KAAK,EAAE;AACNC,cAAAA,QAAQ,EAAE;AADJ;AAFD;AADD,SATC;AAiBRC,QAAAA,MAAM,EAAE;AACPC,UAAAA,KAAK,EAAE,QADA;AAEPpB,UAAAA,KAAK,EAAE;AAFA,SAjBA;AAqBRqB,QAAAA,OAAO,EAAE;AACRC,UAAAA,MAAM,EAAE;AAAER,YAAAA,IAAI,EAAE;AAAR;AADA;AArBD,OADG;AA0BZS,MAAAA,MAAM,EAAE,CAAC;AACRC,QAAAA,IAAI,EAAE,UADE;AAERC,QAAAA,IAAI,EAAE;AAFE,OAAD;AA1BI,KAAb;AA+BA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC,KAAKtC,KAAL,CAAWG,GAAZ,CAAL,CACEoC,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAGGG,MAAD,IAAY;AACX,UAAIN,IAAI,GAAG,EAAX;AACA,UAAIb,UAAU,GAAG,EAAjB;AACA,UAAIoB,SAAS,GAAG,EAAhB;AACAD,MAAAA,MAAM,CAACE,OAAP,CAAeC,OAAf,CAAuB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC,cAAMC,KAAK,GAAGF,IAAI,CAACG,MAAL,CAAYC,IAA1B;AACA,cAAMC,MAAM,GAAGL,IAAI,CAACG,MAAL,CAAYG,IAAZ,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAf;AACA,cAAMC,MAAM,GAAGH,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAf;AACA,cAAME,MAAM,GAAGJ,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAf;AACA,cAAMG,QAAQ,GAAGF,MAAM,GAAG,GAAT,GAAeC,MAAhC;AACAnB,QAAAA,IAAI,CAACqB,OAAL,CAAaT,KAAb;AACAzB,QAAAA,UAAU,CAACkC,OAAX,CAAmBD,QAAnB;AACAb,QAAAA,SAAS,GAAGG,IAAI,CAACH,SAAjB;AACA,OATD,EAJW,CAeX;;AACA,WAAKe,QAAL,CAAc;AACbzC,QAAAA,OAAO,EAAE;AACRK,UAAAA,KAAK,EAAE;AACNC,YAAAA,UAAU,EAAEA;AADN;AADC,SADI;AAMbW,QAAAA,MAAM,EAAE,CAAC;AACRC,UAAAA,IAAI,EAAEQ,SADE;AAERP,UAAAA,IAAI,EAAEA;AAFE,SAAD;AANK,OAAd;AAYA,KA/BH,EAgCGuB,KAAD,IAAW,CAEV,CAlCH;AAoCA;;AAED5D,EAAAA,MAAM,GAAG;AACR,WACC,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWC,OAA3B;AAAoC,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWkB,MAAvD;AAA+D,MAAA,IAAI,EAAC,MAApE;AAA2E,MAAA,KAAK,EAAC,MAAjF;AAAwF,MAAA,MAAM,EAAE,GAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGA;;AAhF2C;;AAmF7C,eAAerC,aAAf","sourcesContent":["import React from 'react';\nimport Chart from 'react-apexcharts'\n\nclass PollutionCard extends React.Component {\n\n    render() {\n\n        // Deconstruct props.\n        const { information, source_site, api, y_axis_label } = this.props;\n\n        return (\n            <div style={{padding: \"20px\", paddingTop: \"0px\"}}>\n                <div style={{padding: \"20px\", backgroundColor:\"#CFCFCF\", display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\"}}>\n                    <div><h4>Data: Air Quality</h4></div>\n                    <div style={{display: 'flex', width: '100%', flexDirection: 'column', alignItems: 'left'}}>\n                        <div style={{paddingTop: '10px', paddingBottom: '10px', display: 'flex', justifyContent: 'left'}}>\n                            <p>{information}</p>\n                        </div>\n                        <div style={{paddingBottom: '10px', display: 'flex', justifyContent: 'left'}}>\n                            <p>Source: <a href={source_site} target=\"_blank\" rel='noopener noreferrer'>{source_site}</a></p>\n                        </div>\n                        <div style={{width: '100%'}}>\n                            <PollutionChart\n                                api={api}\n                                y_axis_label={y_axis_label}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass PollutionChart extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\toptions: {\n\t\t\t\tchart: {\n\t\t\t\t\tid: props.title,\n\t\t\t\t\ttype: 'line'\n\t\t\t\t},\n\t\t\t\txaxis: {\n\t\t\t\t\tcategories: [],\n\t\t\t\t\tlabels: { show: false }\n\t\t\t\t},\n\t\t\t\tyaxis: {\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: props.y_axis_label,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tfontSize: '14px'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstroke: {\n\t\t\t\t\tcurve: 'smooth',\n\t\t\t\t\twidth: 1\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tmarker: { show: false }\n\t\t\t\t}\n\t\t\t},\n\t\t\tseries: [{\n\t\t\t\tname: 'series-1',\n\t\t\t\tdata: []\n\t\t\t}]\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(this.props.api)\n\t\t\t.then(res => res.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tlet data = [];\n\t\t\t\t\tlet categories = [];\n\t\t\t\t\tlet datasetid = \"\";\n\t\t\t\t\tresult.records.forEach((item, index) => {\n\t\t\t\t\t\tconst value = item.fields.pm10;\n\t\t\t\t\t\tconst c_both = item.fields.date.split('+')[0];\n\t\t\t\t\t\tconst c_date = c_both.split('T')[0];\n\t\t\t\t\t\tconst c_time = c_both.split('T')[1];\n\t\t\t\t\t\tconst category = c_date + \" \" + c_time;\n\t\t\t\t\t\tdata.unshift(value);\n\t\t\t\t\t\tcategories.unshift(category);\n\t\t\t\t\t\tdatasetid = item.datasetid;\n\t\t\t\t\t});\n\n\t\t\t\t\t// Update the state.\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\txaxis: {\n\t\t\t\t\t\t\t\tcategories: categories\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tseries: [{\n\t\t\t\t\t\t\tname: datasetid,\n\t\t\t\t\t\t\tdata: data\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\n\n\t\t\t\t},\n\t\t\t\t(error) => {\n\n\t\t\t\t}\n\t\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Chart options={this.state.options} series={this.state.series} type=\"line\" width='100%' height={320} />\n\t\t\t)\n\t}\n}\n\nexport default PollutionCard;"]},"metadata":{},"sourceType":"module"}