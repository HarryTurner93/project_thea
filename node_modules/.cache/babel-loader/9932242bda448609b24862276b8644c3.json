{"ast":null,"code":"var _jsxFileName = \"/home/harry/project_thea/src/components/dashboard.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport { Map } from \"./map\";\nimport { TabBrowser } from \"./tabBrowser\";\nimport { Sensor_data } from \"../fake_data/sensor_data\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabs: [],\n      current_tab_key: \"dashboard\"\n    }; // Bind all handler functions.\n\n    this.removeTab = this.removeTab.bind(this);\n    this.addTab = this.addTab.bind(this);\n    this.setTab = this.setTab.bind(this);\n  } // Call back function to remove a tab from the browser.\n\n\n  removeTab(id) {\n    this.setState(state => {\n      const new_tabs = state.tabs.filter(tab => tab.id !== id);\n      return {\n        tabs: new_tabs,\n        current_tab_key: \"dashboard\"\n      };\n    });\n  } // Call back function to add a tab to the browser.\n\n\n  addTab(eventKey) {\n    // Get tabs that already have this eventKey.\n    const existing_tabs = this.state.tabs.filter(tab => tab.eventKey === eventKey); // Add the new tab if none already exist.\n\n    if (existing_tabs.length === 0) {\n      this.setState((state, props) => ({\n        tabs: state.tabs.concat({\n          \"eventKey\": eventKey,\n          \"title\": eventKey,\n          \"id\": state.tabs.length\n        }),\n        current_tab_key: eventKey\n      }));\n    }\n  }\n\n  setTab(eventKey) {\n    this.setState({\n      current_tab_key: eventKey\n    });\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Map, {\n      add_tab_cb: this.addTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(TabBrowser, {\n      tabs: this.state.tabs,\n      current_tab_key: this.state.current_tab_key,\n      remove_tab_cb: this.removeTab,\n      set_tab_cb: this.setTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/harry/project_thea/src/components/dashboard.js"],"names":["React","BrowserRouter","Router","Route","Switch","Nav","Navbar","Map","TabBrowser","Sensor_data","Dashboard","Component","constructor","props","state","tabs","current_tab_key","removeTab","bind","addTab","setTab","id","setState","new_tabs","filter","tab","eventKey","existing_tabs","length","concat","render","display","flex"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {Nav, Navbar} from \"react-bootstrap\";\nimport {Map} from \"./map\";\nimport {TabBrowser} from \"./tabBrowser\";\nimport {Sensor_data} from \"../fake_data/sensor_data\";\n\nclass Dashboard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tabs: [],\n            current_tab_key: \"dashboard\"\n        };\n\n        // Bind all handler functions.\n        this.removeTab = this.removeTab.bind(this)\n        this.addTab = this.addTab.bind(this)\n        this.setTab = this.setTab.bind(this)\n    }\n\n    // Call back function to remove a tab from the browser.\n    removeTab (id) {\n        this.setState((state) => {\n            const new_tabs = state.tabs.filter(tab => tab.id !== id);\n            return {tabs: new_tabs, current_tab_key: \"dashboard\"}\n        })\n    }\n\n    // Call back function to add a tab to the browser.\n    addTab (eventKey) {\n\n        // Get tabs that already have this eventKey.\n        const existing_tabs = this.state.tabs.filter(tab => tab.eventKey === eventKey);\n\n        // Add the new tab if none already exist.\n        if (existing_tabs.length === 0) {\n            this.setState((state, props) => ({\n                tabs: state.tabs.concat({\"eventKey\": eventKey, \"title\": eventKey, \"id\": state.tabs.length}),\n                current_tab_key: eventKey\n            }));\n        }\n    }\n\n    setTab(eventKey) {\n        this.setState({current_tab_key: eventKey})\n    }\n\n    render() {\n        return (\n            <main className=\"App\">\n                <div style={{display: 'flex'}}>\n                    <div style={{flex: 1}}>\n                        <Map\n                            add_tab_cb={this.addTab}\n                        />\n                    </div>\n                    <div style={{flex: 1}}>\n                        <TabBrowser\n                            tabs={this.state.tabs}\n                            current_tab_key={this.state.current_tab_key}\n                            remove_tab_cb={this.removeTab}\n                            set_tab_cb={this.setTab}\n                        />\n                    </div>\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}