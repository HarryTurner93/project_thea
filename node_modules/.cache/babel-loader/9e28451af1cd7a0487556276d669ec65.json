{"ast":null,"code":"var _jsxFileName = \"/home/harry/pu_frontend/src/components/sensor.js\";\nimport React from \"react\";\nimport { Marker } from \"react-map-gl\";\nimport Sensor_data from \"../fake_data/sensor_data\"; // Some global settings.\n\nconst ICON_SIZE = 80;\n\nclass SensorIcon extends React.Component {\n  render() {\n    const _this$props = this.props,\n          data = _this$props.data,\n          onClick = _this$props.onClick;\n    return data.map((sensor, index) => React.createElement(Marker, {\n      key: `marker-${index}`,\n      longitude: sensor.longitude,\n      latitude: sensor.latitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => onClick(sensor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: sensor.icon,\n      alt: \"sensor_icon\",\n      style: {\n        width: `${ICON_SIZE}px`,\n        transform: `translate(${-ICON_SIZE / 2}px,${-ICON_SIZE}px)`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass InfoCard extends React.Component {\n  render() {\n    // Deconstruct props.\n    const sensor_name = this.props.sensor_name; // Find the sensor with the right name.\n\n    const sensor = Sensor_data.filter(sensor => sensor.name === sensor_name);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, sensor_name));\n  }\n\n}\n\nclass SensorBite extends React.Component {\n  render() {\n    // Deconstruct props.\n    const _this$props2 = this.props,\n          info = _this$props2.info,\n          add_tab_cb = _this$props2.add_tab_cb;\n    return React.createElement(\"div\", {\n      style: {\n        paddingTop: \"15px\",\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, `${info.name}`)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, `Type: ${info.type}`), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Health: \", React.createElement(\"b\", {\n      style: {\n        color: '#55BB55'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, info.health)), React.createElement(\"div\", {\n      onClick: () => add_tab_cb(info.name),\n      style: {\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"More Details\"))));\n  }\n\n}\n\nexport { SensorBite, SensorIcon, InfoCard };","map":{"version":3,"sources":["/home/harry/pu_frontend/src/components/sensor.js"],"names":["React","Marker","Sensor_data","ICON_SIZE","SensorIcon","Component","render","props","data","onClick","map","sensor","index","longitude","latitude","cursor","icon","width","transform","InfoCard","sensor_name","filter","name","SensorBite","info","add_tab_cb","paddingTop","textAlign","type","color","health"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Marker} from \"react-map-gl\";\nimport Sensor_data from \"../fake_data/sensor_data\";\n\n// Some global settings.\nconst ICON_SIZE = 80;\n\nclass SensorIcon extends React.Component {\n  render() {\n    const {data, onClick} = this.props;\n\n    return data.map((sensor, index) => (\n      <Marker key={`marker-${index}`} longitude={sensor.longitude} latitude={sensor.latitude}>\n          <div style={{cursor: 'pointer'}} onClick={() => onClick(sensor)}>\n             <img src={sensor.icon}\n                  alt=\"sensor_icon\"\n                  style={{\n                      width: `${ICON_SIZE}px`,\n                      transform: `translate(${-ICON_SIZE / 2}px,${-ICON_SIZE}px)`}}/>\n          </div>\n      </Marker>\n    ));\n  }\n}\n\nclass InfoCard extends React.Component {\n\n    render() {\n        // Deconstruct props.\n        const { sensor_name } = this.props;\n\n        // Find the sensor with the right name.\n        const sensor = Sensor_data.filter(sensor => sensor.name === sensor_name);\n      return (\n          <div>\n              <div>{sensor_name}</div>\n          </div>\n      );\n  }\n}\n\nclass SensorBite extends React.Component {\n  render() {\n\n      // Deconstruct props.\n      const {info, add_tab_cb} = this.props;\n\n      return (\n          <div style={{paddingTop: \"15px\", textAlign: \"left\"}}>\n              <div><b>{`${info.name}`}</b></div>\n              <div>\n                  <div>{`Type: ${info.type}`}</div>\n                  <div>Health: <b style={{color: '#55BB55'}}>{info.health}</b></div>\n                  <div onClick={() => add_tab_cb(info.name)} style={{cursor: 'pointer'}}><u>More Details</u></div>\n              </div>\n          </div>\n      );\n  }\n}\n\nexport { SensorBite, SensorIcon, InfoCard };"]},"metadata":{},"sourceType":"module"}