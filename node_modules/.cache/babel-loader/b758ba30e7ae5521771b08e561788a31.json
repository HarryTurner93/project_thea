{"ast":null,"code":"var _jsxFileName = \"/home/harry/pu_frontend/src/App.js\";\nimport React, { useCallback } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nconst el = document.createElement('div');\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    mapboxgl.accessToken = 'pk.eyJ1IjoiaHR1cm5lcjMwIiwiYSI6ImNrNjJhZWFkdjBiNnMzbm1tNHh1cDNlMWsifQ.0ZiYTbXUCbaJ2mxlibJjDg';\n    this.state = {\n      lng: -2.5947,\n      lat: 51.5079,\n      zoom: 16\n    };\n  }\n\n  componentDidMount() {\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/outdoors-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    const markerOptions = {\n      element: el,\n      color: '#FFFFFF'\n    };\n    const marker = new mapboxgl.Marker(markerOptions).setLngLat([-2.5947, 51.5079]).addTo(this.map);\n  }\n\n  componentWillUnmount() {\n    this.map.remove();\n  }\n\n  render() {\n    const style = {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      width: '100%'\n    };\n    return React.createElement(\"div\", {\n      style: style,\n      ref: el => this.mapContainer = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction App() {\n  // We pass onDrop function and accept prop to the component. It will be used as initial params for useDropzone hook\n  return React.createElement(\"main\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Map, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/harry/pu_frontend/src/App.js"],"names":["React","useCallback","mapboxgl","el","document","createElement","Map","Component","constructor","props","accessToken","state","lng","lat","zoom","componentDidMount","map","container","mapContainer","style","center","markerOptions","element","color","marker","Marker","setLngLat","addTo","componentWillUnmount","remove","render","position","top","bottom","width","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,MAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAP,IAAAA,QAAQ,CAACQ,WAAT,GAAuB,8FAAvB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,CAAC,MADG;AAETC,MAAAA,GAAG,EAAE,OAFI;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAb;AAKH;;AAEHC,EAAAA,iBAAiB,GAAG;AACd,SAAKC,GAAL,GAAW,IAAId,QAAQ,CAACI,GAAb,CAAiB;AACxBW,MAAAA,SAAS,EAAE,KAAKC,YADQ;AAExBC,MAAAA,KAAK,EAAE,qCAFiB;AAGxBC,MAAAA,MAAM,EAAE,CAAC,KAAKT,KAAL,CAAWC,GAAZ,EAAiB,KAAKD,KAAL,CAAWE,GAA5B,CAHgB;AAIxBC,MAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AAJO,KAAjB,CAAX;AAOA,UAAMO,aAAa,GAAG;AAClBC,MAAAA,OAAO,EAAEnB,EADS;AAElBoB,MAAAA,KAAK,EAAE;AAFW,KAAtB;AAIA,UAAMC,MAAM,GAAG,IAAItB,QAAQ,CAACuB,MAAb,CAAoBJ,aAApB,EACZK,SADY,CACF,CAAC,CAAC,MAAF,EAAU,OAAV,CADE,EAEZC,KAFY,CAEN,KAAKX,GAFC,CAAf;AAGC;;AAEPY,EAAAA,oBAAoB,GAAG;AACrB,SAAKZ,GAAL,CAASa,MAAT;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMX,KAAK,GAAG;AACZY,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,GAAG,EAAE,CAFO;AAGZC,MAAAA,MAAM,EAAE,CAHI;AAIZC,MAAAA,KAAK,EAAE;AAJK,KAAd;AAOA,WAAO;AAAK,MAAA,KAAK,EAAEf,KAAZ;AAAmB,MAAA,GAAG,EAAEhB,EAAE,IAAI,KAAKe,YAAL,GAAoBf,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AA1C+B;;AA6ClC,SAASgC,GAAT,GAAe;AAEb;AACA,SACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF;AAKD;;AAED,eAAeA,GAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\n\nconst el = document.createElement('div');\n\nclass Map extends React.Component {\n\n    constructor(props) {\n        super(props);\n        mapboxgl.accessToken = 'pk.eyJ1IjoiaHR1cm5lcjMwIiwiYSI6ImNrNjJhZWFkdjBiNnMzbm1tNHh1cDNlMWsifQ.0ZiYTbXUCbaJ2mxlibJjDg';\n        this.state = {\n            lng: -2.5947,\n            lat: 51.5079,\n            zoom: 16\n        };\n    }\n\n  componentDidMount() {\n        this.map = new mapboxgl.Map({\n            container: this.mapContainer,\n            style: 'mapbox://styles/mapbox/outdoors-v11',\n            center: [this.state.lng, this.state.lat],\n            zoom: this.state.zoom\n        });\n\n        const markerOptions = {\n            element: el,\n            color: '#FFFFFF'\n        }\n        const marker = new mapboxgl.Marker(markerOptions)\n          .setLngLat([-2.5947, 51.5079])\n          .addTo(this.map);\n        }\n\n  componentWillUnmount() {\n    this.map.remove();\n  }\n\n  render() {\n    const style = {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      width: '100%'\n    };\n\n    return <div style={style} ref={el => this.mapContainer = el} />;\n  }\n}\n\nfunction App() {\n\n  // We pass onDrop function and accept prop to the component. It will be used as initial params for useDropzone hook\n  return (\n    <main className=\"App\">\n        <Map/>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}