{"ast":null,"code":"var _jsxFileName = \"/home/harry/pu_frontend/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport ReactMapGL, { Marker, Popup, NavigationControl, FullscreenControl, ScaleControl } from 'react-map-gl';\nconst SENSORS = [{\n  \"latitude\": 51.5094,\n  \"longitude\": -2.5890,\n  \"id\": 1\n}, {\n  \"latitude\": 51.5100,\n  \"longitude\": -2.5957,\n  \"id\": 2\n}];\n\nfunction liveDot() {\n  return React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"96\",\n    height: \"96\",\n    viewBox: \"0 0 171 171\",\n    style: \" fill:#000000;\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    fill: \"none\",\n    \"fill-rule\": \"nonzero\",\n    stroke: \"none\",\n    \"stroke-width\": \"1\",\n    \"stroke-linecap\": \"butt\",\n    \"stroke-linejoin\": \"miter\",\n    \"stroke-miterlimit\": \"10\",\n    \"stroke-dasharray\": \"\",\n    \"stroke-dashoffset\": \"0\",\n    \"font-family\": \"none\",\n    \"font-weight\": \"none\",\n    \"font-size\": \"none\",\n    \"text-anchor\": \"none\",\n    style: \"mix-blend-mode: normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M0,171.98863v-171.98863h171.98863v171.98863z\",\n    fill: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    fill: \"#2ecc71\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M85.5,156.75c-39.1875,0 -71.25,-32.0625 -71.25,-71.25c0,-39.1875 32.0625,-71.25 71.25,-71.25c39.1875,0 71.25,32.0625 71.25,71.25c0,39.1875 -32.0625,71.25 -71.25,71.25z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))));\n}\n\nclass Sensors extends React.Component {\n  render() {\n    const _this$props = this.props,\n          data = _this$props.data,\n          onClick = _this$props.onClick;\n    return data.map((sensor, index) => React.createElement(Marker, {\n      key: `marker-${index}`,\n      longitude: sensor.longitude,\n      latitude: sensor.latitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        cursor: 'pointer',\n        backgroundColor: '#FFFFFF',\n        padding: 5\n      },\n      onClick: () => onClick(sensor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/officel/80/000000/rfid-signal.png\",\n      alt: sensor.species,\n      style: {\n        width: '40px',\n        paddingRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), \"Sensor Tower \", sensor.id), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Live\"))));\n  }\n\n}\n\nclass SensorInfo extends React.Component {\n  render() {\n    const info = this.props.info;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"None\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Last Seen: 1 hour(s) ago\"));\n  }\n\n}\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewport: {\n        width: \"100%\",\n        height: 1000,\n        latitude: 51.5084,\n        longitude: -2.5927,\n        zoom: 16\n      }\n    };\n\n    this._updateViewport = viewport => {\n      this.setState({\n        viewport\n      });\n    };\n\n    this._onClickMarker = city => {\n      this.setState({\n        popupInfo: city\n      });\n    };\n  }\n\n  _renderPopup() {\n    const popupInfo = this.state.popupInfo;\n    return popupInfo && React.createElement(Popup, {\n      tipSize: 5,\n      anchor: \"top\",\n      longitude: popupInfo.longitude,\n      latitude: popupInfo.latitude,\n      closeOnClick: false,\n      onClose: () => this.setState({\n        popupInfo: null\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(SensorInfo, {\n      info: popupInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(ReactMapGL, Object.assign({}, this.state.viewport, {\n      onViewportChange: viewport => this.setState({\n        viewport\n      }),\n      mapStyle: \"mapbox://styles/hturner30/ck62e8klf0xzn1ithmmtve3iq\",\n      mapboxApiAccessToken: \"pk.eyJ1IjoiaHR1cm5lcjMwIiwiYSI6ImNrNjJhZWFkdjBiNnMzbm1tNHh1cDNlMWsifQ.0ZiYTbXUCbaJ2mxlibJjDg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), this.state.viewport.zoom >= 15 ? React.createElement(Sensors, {\n      data: SENSORS,\n      onClick: this._onClickMarker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }) : null, this._renderPopup());\n  }\n\n}\n\nfunction App() {\n  // We pass onDrop function and accept prop to the component. It will be used as initial params for useDropzone hook\n  return React.createElement(\"main\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Map, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/harry/pu_frontend/src/App.js"],"names":["React","useState","mapboxgl","ReactMapGL","Marker","Popup","NavigationControl","FullscreenControl","ScaleControl","SENSORS","liveDot","Sensors","Component","render","props","data","onClick","map","sensor","index","longitude","latitude","cursor","backgroundColor","padding","species","width","paddingRight","id","SensorInfo","info","Map","state","viewport","height","zoom","_updateViewport","setState","_onClickMarker","city","popupInfo","_renderPopup","App"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport ReactMapGL, {Marker, Popup, NavigationControl, FullscreenControl, ScaleControl} from 'react-map-gl';\n\nconst SENSORS = [\n    {\"latitude\":51.5094, \"longitude\":-2.5890, \"id\": 1},\n    {\"latitude\":51.5100,\"longitude\":-2.5957, \"id\": 2},\n]\n\nfunction liveDot () {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n            width=\"96\" height=\"96\"\n            viewBox=\"0 0 171 171\"\n            style=\" fill:#000000;\">\n            <g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"\n               stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\"\n               stroke-dasharray=\"\" stroke-dashoffset=\"0\" font-family=\"none\" font-weight=\"none\"\n               font-size=\"none\" text-anchor=\"none\" style=\"mix-blend-mode: normal\">\n               <path d=\"M0,171.98863v-171.98863h171.98863v171.98863z\" fill=\"none\"></path>\n            <g fill=\"#2ecc71\"><\n                path d=\"M85.5,156.75c-39.1875,0 -71.25,-32.0625 -71.25,-71.25c0,-39.1875 32.0625,-71.25 71.25,-71.25c39.1875,0 71.25,32.0625 71.25,71.25c0,39.1875 -32.0625,71.25 -71.25,71.25z\"></path>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nclass Sensors extends React.Component {\n  render() {\n    const {data, onClick} = this.props;\n\n    return data.map((sensor, index) => (\n      <Marker key={`marker-${index}`} longitude={sensor.longitude} latitude={sensor.latitude}>\n          <div style={{cursor: 'pointer', backgroundColor: '#FFFFFF', padding: 5}} onClick={() => onClick(sensor)}>\n              <div>\n                  <img src=\"https://img.icons8.com/officel/80/000000/rfid-signal.png\"\n                       alt={sensor.species}\n                       style={{width: '40px', paddingRight: 10}}/>\n                  Sensor Tower {sensor.id}\n              </div>\n              <div>\n                  Live\n              </div>\n          </div>\n      </Marker>\n    ));\n  }\n}\n\nclass SensorInfo extends React.Component {\n  render() {\n    const {info} = this.props;\n\n    return (\n      <div>\n          <div>None</div>\n          <div>Last Seen: 1 hour(s) ago</div>\n      </div>\n    );\n  }\n}\n\nclass Map extends React.Component {\n\n  state = {\n    viewport: {\n      width: \"100%\",\n      height: 1000,\n      latitude: 51.5084,\n      longitude: -2.5927,\n      zoom: 16\n    }\n  };\n\n  _updateViewport = viewport => {\n    this.setState({viewport});\n  };\n\n  _onClickMarker = city => {\n    this.setState({popupInfo: city});\n  };\n\n  _renderPopup() {\n    const {popupInfo} = this.state;\n\n    return (\n      popupInfo && (\n        <Popup\n          tipSize={5}\n          anchor=\"top\"\n          longitude={popupInfo.longitude}\n          latitude={popupInfo.latitude}\n          closeOnClick={false}\n          onClose={() => this.setState({popupInfo: null})}\n        >\n          <SensorInfo info={popupInfo} />\n        </Popup>\n      )\n    );\n  }\n\n  render() {\n    return (\n      <ReactMapGL\n        {...this.state.viewport}\n        onViewportChange={(viewport) => this.setState({viewport})}\n        mapStyle='mapbox://styles/hturner30/ck62e8klf0xzn1ithmmtve3iq'\n        mapboxApiAccessToken='pk.eyJ1IjoiaHR1cm5lcjMwIiwiYSI6ImNrNjJhZWFkdjBiNnMzbm1tNHh1cDNlMWsifQ.0ZiYTbXUCbaJ2mxlibJjDg'\n      >\n          {(this.state.viewport.zoom >= 15)\n              ? <Sensors data={SENSORS} onClick={this._onClickMarker}/>\n              : null\n          }\n          {this._renderPopup()}\n      </ReactMapGL>\n    );\n  }\n}\n\nfunction App() {\n\n  // We pass onDrop function and accept prop to the component. It will be used as initial params for useDropzone hook\n  return (\n    <main className=\"App\">\n        <Map/>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}