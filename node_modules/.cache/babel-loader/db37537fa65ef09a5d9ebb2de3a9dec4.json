{"ast":null,"code":"var _jsxFileName = \"/home/harry/pu_frontend/src/App.js\";\nimport React, { useCallback } from 'react';\nimport './App.css'; //import {Bootstrap, Grid, Row, Col} from 'react-bootstrap';\n\nimport Dropzone from \"./components/Dropzone\";\nimport mapboxgl from 'mapbox-gl';\nmapboxgl.accessToken = 'MAPBOX_ACCESS_TOKEN';\n\nfunction App() {\n  // onDrop function\n  const onDrop = useCallback(acceptedFiles => {\n    // Map the image names into a list.\n    const object_keys = acceptedFiles.map(function (currentFile) {\n      return currentFile.path;\n    });\n  }, []); // We pass onDrop function and accept prop to the component. It will be used as initial params for useDropzone hook\n\n  return React.createElement(\"main\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/harry/pu_frontend/src/App.js"],"names":["React","useCallback","Dropzone","mapboxgl","accessToken","App","onDrop","acceptedFiles","object_keys","map","currentFile","path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAO,WAAP,C,CAEA;;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEAA,QAAQ,CAACC,WAAT,GAAuB,qBAAvB;;AAEA,SAASC,GAAT,GAAe;AAEb;AACA,QAAMC,MAAM,GAAGL,WAAW,CAACM,aAAa,IAAI;AAExC;AACD,UAAMC,WAAW,GAAGD,aAAa,CAACE,GAAd,CAAkB,UAAUC,WAAV,EAAuB;AACtD,aAAOA,WAAW,CAACC,IAAnB;AACH,KAFgB,CAApB;AAOF,GAVyB,EAUvB,EAVuB,CAA1B,CAHa,CAeb;;AACA,SACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAOD;;AAED,eAAeN,GAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport './App.css';\n\n//import {Bootstrap, Grid, Row, Col} from 'react-bootstrap';\n\nimport Dropzone from \"./components/Dropzone\";\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken = 'MAPBOX_ACCESS_TOKEN';\n\nfunction App() {\n\n  // onDrop function\n  const onDrop = useCallback(acceptedFiles => {\n\n      // Map the image names into a list.\n     const object_keys = acceptedFiles.map(function (currentFile) {\n            return currentFile.path;\n        });\n\n\n\n\n  }, []);\n\n  // We pass onDrop function and accept prop to the component. It will be used as initial params for useDropzone hook\n  return (\n    <main className=\"App\">\n      <div className=\"center\">\n\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}