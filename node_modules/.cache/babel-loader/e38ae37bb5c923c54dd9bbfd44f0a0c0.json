{"ast":null,"code":"var _jsxFileName = \"/home/harry/pu_frontend/src/components/Dropzone.js\";\nimport React from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport styled from 'styled-components';\n\nconst getColor = props => {\n  if (props.isDragAccept) {\n    return '#00e676';\n  }\n\n  if (props.isDragReject) {\n    return '#ff1744';\n  }\n\n  if (props.isDragActive) {\n    return '#2196f3';\n  }\n\n  return '#eeeeee';\n};\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: ${props => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border .24s ease-in-out;\n`;\n\nconst Dropzone = ({\n  onDrop,\n  accept\n}) => {\n  // Initializing useDropzone hooks with options\n  const _useDropzone = useDropzone({\n    onDrop,\n    accept\n  }),\n        getRootProps = _useDropzone.getRootProps,\n        getInputProps = _useDropzone.getInputProps,\n        isDragActive = _useDropzone.isDragActive;\n  /* \n    useDropzone hooks exposes two functions called getRootProps and getInputProps\n    and also exposes isDragActive boolean\n  */\n\n\n  return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({\n    className: \"dropzone-input\"\n  }, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, isDragActive ? React.createElement(\"p\", {\n    className: \"dropzone-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Release to drop the files here\") : React.createElement(\"p\", {\n    className: \"dropzone-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Drag 'n' drop some files here, or click to select files\")));\n};\n\nexport default Dropzone;","map":{"version":3,"sources":["/home/harry/pu_frontend/src/components/Dropzone.js"],"names":["React","useDropzone","styled","getColor","props","isDragAccept","isDragReject","isDragActive","Container","div","Dropzone","onDrop","accept","getRootProps","getInputProps"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,MAAIA,KAAK,CAACC,YAAV,EAAwB;AACpB,WAAO,SAAP;AACH;;AACD,MAAID,KAAK,CAACE,YAAV,EAAwB;AACpB,WAAO,SAAP;AACH;;AACD,MAAIF,KAAK,CAACG,YAAV,EAAwB;AACpB,WAAO,SAAP;AACH;;AACD,SAAO,SAAP;AACD,CAXD;;AAaA,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAI;;;;;;;;kBAQXL,KAAK,IAAID,QAAQ,CAACC,KAAD,CAAQ;;;;;;CAR3C;;AAiBA,MAAMM,QAAQ,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAwB;AAEvC;AAFuC,uBAGeX,WAAW,CAAC;AAChEU,IAAAA,MADgE;AAEhEC,IAAAA;AAFgE,GAAD,CAH1B;AAAA,QAG/BC,YAH+B,gBAG/BA,YAH+B;AAAA,QAGjBC,aAHiB,gBAGjBA,aAHiB;AAAA,QAGFP,YAHE,gBAGFA,YAHE;AAQvC;;;;;;AAKA,SACE,6CAASM,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAO,IAAA,SAAS,EAAC;AAAjB,KAAsCC,aAAa,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,YAAY,GACX;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADW,GAGX;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAJJ,CAFF,CADF;AAcD,CA3BD;;AA6BA,eAAeG,QAAf","sourcesContent":["\nimport React from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport styled from 'styled-components'\n\nconst getColor = (props) => {\n  if (props.isDragAccept) {\n      return '#00e676';\n  }\n  if (props.isDragReject) {\n      return '#ff1744';\n  }\n  if (props.isDragActive) {\n      return '#2196f3';\n  }\n  return '#eeeeee';\n}\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: ${props => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border .24s ease-in-out;\n`;\n\n\nconst Dropzone = ({ onDrop, accept }) => {\n\n  // Initializing useDropzone hooks with options\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept\n  });\n\n  /* \n    useDropzone hooks exposes two functions called getRootProps and getInputProps\n    and also exposes isDragActive boolean\n  */\n\n  return (\n    <div {...getRootProps()}>\n      <input className=\"dropzone-input\" {...getInputProps()} />\n      <div className=\"text-center\">\n        {isDragActive ? (\n          <p className=\"dropzone-content\">Release to drop the files here</p>\n        ) : (\n          <p className=\"dropzone-content\">\n            Drag 'n' drop some files here, or click to select files\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dropzone;"]},"metadata":{},"sourceType":"module"}